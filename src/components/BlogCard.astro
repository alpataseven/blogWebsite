---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';

const { title, description, pubDate, updatedDate, heroImage, readTime, category, author, tags } = Astro.props;
---

<html lang="tr">
  <head>
    <BaseHead title={title} description={description} />
  </head>
  <body class="font-sans bg-base-100 text-base-content">
    <Header />
    <main class="max-w-4xl mx-auto p-4">
      <article class="card bg-base-100 shadow-xl hover:shadow-2xl transition-shadow duration-300">
        {heroImage && (
          <figure class="relative">
            <Image class="w-full h-64 object-cover" width={1020} height={510} src={heroImage} alt={title} loading="lazy" />
            {category && (
              <div class="absolute top-4 right-4 badge badge-primary">
                {category}
              </div>
            )}
          </figure>
        )}

        <div class="card-body prose lg:prose-xl">
          <header class="text-center mb-4">
            <h1 class="card-title text-4xl font-bold hover:text-primary transition-colors">{title}</h1>
            <p class="text-sm text-gray-500">
              <FormattedDate date={pubDate} />
              {updatedDate && (
                <span class="italic"> — Son güncelleme: <FormattedDate date={updatedDate} /></span>
              )}
            </p>
          </header>

          <p class="text-gray-600 mb-2">{description}</p>

          <div class="flex items-center gap-4 text-sm text-gray-500 mt-2">
            <span>{readTime} dakika</span>
          </div>

          {author && (
            <div class="flex items-center gap-3 mt-4">
              <div class="avatar">
                <div class="w-10 rounded-full">
                  <img src={author.avatar} alt={author.name} />
                </div>
              </div>
              <div>
                <p class="font-medium text-sm">{author.name}</p>
                <p class="text-xs text-gray-500">{author.role}</p>
              </div>
            </div>
          )}

          <div class="flex flex-wrap gap-2 mt-4">
            {tags.map((tag, idx) => (
              <div key={idx} class="badge badge-outline hover:badge-primary transition-colors cursor-pointer">
                #{tag}
              </div>
            ))}
          </div>

          <div class="mt-6">
            <slot />
          </div>
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>

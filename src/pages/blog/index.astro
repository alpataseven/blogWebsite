---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import BlogList from "../../components/BlogList.jsx"


const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<!doctype html>
<html lang="tr">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="font-sans bg-base-100 text-base-content">
    <Header />
    <!-- <main class="max-w-6xl mx-auto p-6 grid grid-cols-1 md:grid-cols-2 gap-6">
      {posts.map((post) => (
        <a href={`/blog/${post.slug}/`} class="card bg-base-100 shadow-xl hover:shadow-2xl transition-shadow duration-300">
          {post.data.heroImage && (
            <figure class="relative">
              <Image
                class="w-full h-56 object-cover"
                width={720}
                height={360}
                src={post.data.heroImage}
                alt={post.data.title}
                loading="lazy"
              />
              {post.data.category && (
                <div class="absolute top-4 right-4 badge badge-primary">
                  {post.data.category}
                </div>
              )}
            </figure>
          )}

          <div class="card-body">
            <h2 class="card-title hover:text-primary transition-colors">
              {post.data.title}
            </h2>

            <p class="text-gray-600 line-clamp-2">{post.data.description}</p>

            <div class="flex items-center gap-4 text-sm text-gray-500 mt-2">
              {post.data.readTime && <span>{post.data.readTime} dakika</span>}
              {post.data.pubDate && <span><FormattedDate date={post.data.pubDate} /></span>}
            </div>

            {post.data.author && (
              <div class="flex items-center gap-3 mt-3">
                <div class="avatar">
                  <div class="w-8 rounded-full">
                    <img src={post.data.author.avatar} alt={post.data.author.name} />
                  </div>
                </div>
                <div>
                  <p class="font-medium text-sm">{post.data.author.name}</p>
                  <p class="text-xs text-gray-500">{post.data.author.role}</p>
                </div>
              </div>
            )}

            {post.data.tags && post.data.tags.length > 0 && (
              <div class="flex flex-wrap gap-2 mt-3">
                {post.data.tags.map((tag, idx) => (
                  <div key={idx} class="badge badge-outline hover:badge-primary transition-colors cursor-pointer">
                    #{tag}
                  </div>
                ))}
              </div>
            )}

            <div class="card-actions justify-end mt-4">
              <button class="btn btn-sm btn-primary">Detayları Gör</button>
            </div>
          </div>
        </a>
      ))}
    </main>-->
    <BlogList client:load posts={posts} />
    <Footer />
  </body>
</html>

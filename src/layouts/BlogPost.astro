---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import ScrollTop from "../components/ScrollTopButton.jsx";
import ScrollProgress from "../components/ScrollProgress.jsx";
import SocialMedia from "../components/SocialMedia.jsx";
import { Image } from "astro:assets";

type Props = CollectionEntry<"blog">["data"];
const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  category,
  tags,
  author,
  readTime,
} = Astro.props;
---

<html data-theme="light" lang="tr">
  <head>
    <BaseHead title={title} description={description} />
    <link rel="shortcut icon" href="../../public/logo2.png" type="image/x-icon">
  </head>
  <body class="font-sans bg-base-100 text-base-content">
    <ScrollProgress />
    <Header />
    <main class="max-w-4xl mx-auto p-4">
      <article class="prose lg:prose-xl">
        {
          heroImage && (
            <div class="mb-8">
              <Image
                class="rounded-2xl shadow-lg"
                width={1020}
                height={510}
                src={heroImage}
                alt={title}
              />
            </div>
          )
        }

        <header class="text-center mb-6">
          <h1 class="text-4xl font-bold mb-2">{title}</h1>
          <p class="text-sm text-gray-500">
            <FormattedDate date={pubDate} />
            {
              updatedDate && (
                <span class="italic">
                  {" "}
                  — Son güncelleme: <FormattedDate date={updatedDate} />
                </span>
              )
            }
          </p>
          {
            readTime && (
              <p class="text-xs text-gray-400 mt-1">
                Tahmini okuma süresi: {readTime} dk
              </p>
            )
          }
        </header>

        <slot />

        <!-- Blog Detayları -->
        <div class="mt-12 border-t pt-8">
          {
            author && (
              <div class="flex items-center gap-4 mb-6">
                {author.avatar && (
                  <img
                    src={author.avatar}
                    alt={author.name}
                    class="w-12 h-12 rounded-full object-cover"
                  />
                )}
                <div>
                  <p class="text-base font-semibold">{author.name}</p>
                  <p class="text-sm text-gray-500">{author.role}</p>
                </div>
              </div>
            )
          }

          {
            category && (
              <div class="mb-4">
                <span class="inline-block px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-xs">
                  {category}
                </span>
              </div>
            )
          }

          {
            tags && tags.length > 0 && (
              <div class="flex flex-wrap gap-2">
                {tags.map((tag, i) => (
                  <span
                    key={i}
                    class="text-xs px-2 py-1 bg-gray-200 rounded-full text-gray-700"
                  >
                    #{tag}
                  </span>
                ))}
              </div>
            )
          }
        </div>
      </article>
    </main>
    <SocialMedia client:load />
    <ScrollTop client:load />
    <Footer />
  </body>
</html>
